{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com';\n  }\n  // Obtener todos los comentarios\n  getComments() {\n    const url = `${this.apiUrl}/comments`;\n    return this.http.get(url);\n  }\n  // Obtener un comentario por su ID\n  getCommentById(id) {\n    const url = `${this.apiUrl}/comments/${id}`;\n    return this.http.get(url);\n  }\n  // Crear un nuevo comentario\n  createComments(Comments) {\n    const url = `${this.apiUrl}/comments`;\n    return this.http.post(url, Comments);\n  }\n  // Eliminar un comentario por su ID\n  deleteComment(id) {\n    const url = `${this.apiUrl}/comments/${id}`;\n    return this.http.delete(url);\n  }\n}\n_class = CommentsService;\n_class.ɵfac = function CommentsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CommentsService","constructor","http","apiUrl","getComments","url","get","getCommentById","id","createComments","Comments","post","deleteComment","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\p\\ub\\src\\app\\comments\\comments.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Comments } from './comments';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n  private apiUrl = 'https://jsonplaceholder.typicode.com';\n\n  constructor(private http: HttpClient) { }\n\n  // Obtener todos los comentarios\n  getComments(): Observable<Comments[]> {\n    const url = `${this.apiUrl}/comments`;\n    return this.http.get<Comments[]>(url);\n  }\n\n  // Obtener un comentario por su ID\n  getCommentById(id: number): Observable<Comment> {\n    const url = `${this.apiUrl}/comments/${id}`;\n    return this.http.get<Comment>(url);\n  }\n\n  // Crear un nuevo comentario\n  createComments(Comments: Comments): Observable<Comments> {\n    const url = `${this.apiUrl}/comments`;\n    return this.http.post<Comments>(url, Comments);\n  }\n\n  // Eliminar un comentario por su ID\n  deleteComment(id: number): Observable<any> {\n    const url = `${this.apiUrl}/comments/${id}`;\n    return this.http.delete(url);\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sCAAsC;EAEf;EAExC;EACAC,WAAWA,CAAA;IACT,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAW;IACrC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAaD,GAAG,CAAC;EACvC;EAEA;EACAE,cAAcA,CAACC,EAAU;IACvB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,aAAaK,EAAE,EAAE;IAC3C,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAUD,GAAG,CAAC;EACpC;EAEA;EACAI,cAAcA,CAACC,QAAkB;IAC/B,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAW;IACrC,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAAWN,GAAG,EAAEK,QAAQ,CAAC;EAChD;EAEA;EACAE,aAAaA,CAACJ,EAAU;IACtB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,aAAaK,EAAE,EAAE;IAC3C,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAACR,GAAG,CAAC;EAC9B;;SA3BWL,eAAe;;mBAAfA,MAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAfjB,MAAe;EAAAkB,OAAA,EAAflB,MAAe,CAAAmB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}