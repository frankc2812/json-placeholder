{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./comments.service\";\nexport class CommentsComponent {\n  constructor(commentsservice) {\n    this.commentsservice = commentsservice;\n    this.comentarios = [];\n  }\n  ngOnInit() {\n    this.CargarComentarios();\n  }\n  CargarComentarios() {\n    this.commentsservice.getComments().subscribe(res => {\n      // Recorrer el array usando forEach\n      this.comentarios.forEach(comentario => {\n        // Hacer algo con cada tarea, por ejemplo, mostrar su nombre\n        console.log(comentario.id);\n      });\n    });\n  }\n}\n_class = CommentsComponent;\n_class.ɵfac = function CommentsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CommentService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-comments\"]],\n  decls: 17,\n  vars: 0,\n  consts: [[1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-success\"]],\n  template: function CommentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n      i0.ɵɵtext(3, \"Comentarios\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"td\");\n      i0.ɵɵtext(5, \" Hacer algo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\")(7, \"button\", 0);\n      i0.ɵɵtext(8, \"Comentario.userid\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 1);\n      i0.ɵɵtext(10, \"Comentario.id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 1);\n      i0.ɵɵtext(12, \"Comentario.name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵtext(14, \"Comentario.email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 1);\n      i0.ɵɵtext(16, \"Comentario.body\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CommentsComponent","constructor","commentsservice","comentarios","ngOnInit","CargarComentarios","getComments","subscribe","res","forEach","comentario","console","log","id","i0","ɵɵdirectiveInject","i1","CommentService","selectors","decls","vars","consts","template","CommentsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\p\\ub\\src\\app\\comments\\comments.component.ts","C:\\Users\\p\\ub\\src\\app\\comments\\comments.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommentService } from './comments.service';\nimport { Comments } from './comments';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\n\nexport class CommentsComponent  implements OnInit{\n  comentarios: Comments[] = [];\n\n  constructor(private commentsservice: CommentService){}\n\n  ngOnInit(): void {\n      this.CargarComentarios();\n  }\n\n  CargarComentarios(): void {\n    this.commentsservice.getComments().subscribe((res: any) => { \n\n      // Recorrer el array usando forEach\n      this.comentarios.forEach((comentario: Comments) =>{\n      // Hacer algo con cada tarea, por ejemplo, mostrar su nombre\n      console.log(comentario.id);\n      })\n    })\n  }\n}\n\n\n","<tbody>\n    <!-- Aquí puedes agregar manualmente las filas de tareas utilizando clases de Bootstrap -->\n    <tr>\n        <td>Comentarios</td>\n        <td> Hacer algo</td>\n        <td>\n            <button class=\"btn btn-primary\">Comentario.userid</button>\n            <button class=\"btn btn-success\">Comentario.id</button>\n            <button class=\"btn btn-success\">Comentario.name</button>\n            <button class=\"btn btn-success\">Comentario.email</button>\n            <button class=\"btn btn-success\">Comentario.body</button>\n                      \n            \n        </td>\n    </tr>\n</tbody>"],"mappings":";;;AAUA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,WAAW,GAAe,EAAE;EAEyB;EAErDC,QAAQA,CAAA;IACJ,IAAI,CAACC,iBAAiB,EAAE;EAC5B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACH,eAAe,CAACI,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAQ,IAAI;MAExD;MACA,IAAI,CAACL,WAAW,CAACM,OAAO,CAAEC,UAAoB,IAAI;QAClD;QACAC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,EAAE,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;SAlBWb,iBAAiB;;mBAAjBA,MAAiB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAjBjB,MAAiB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV9BV,EAAA,CAAAY,cAAA,YAAO;MAGKZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACpBd,EAAA,CAAAY,cAAA,SAAI;MAACZ,EAAA,CAAAa,MAAA,kBAAU;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACpBd,EAAA,CAAAY,cAAA,SAAI;MACgCZ,EAAA,CAAAa,MAAA,wBAAiB;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAC1Dd,EAAA,CAAAY,cAAA,gBAAgC;MAAAZ,EAAA,CAAAa,MAAA,qBAAa;MAAAb,EAAA,CAAAc,YAAA,EAAS;MACtDd,EAAA,CAAAY,cAAA,iBAAgC;MAAAZ,EAAA,CAAAa,MAAA,uBAAe;MAAAb,EAAA,CAAAc,YAAA,EAAS;MACxDd,EAAA,CAAAY,cAAA,iBAAgC;MAAAZ,EAAA,CAAAa,MAAA,wBAAgB;MAAAb,EAAA,CAAAc,YAAA,EAAS;MACzDd,EAAA,CAAAY,cAAA,iBAAgC;MAAAZ,EAAA,CAAAa,MAAA,uBAAe;MAAAb,EAAA,CAAAc,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}